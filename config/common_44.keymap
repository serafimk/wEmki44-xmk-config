/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    macros {
        Lock: Lock {
            compatible = "zmk,behavior-macro";
            label = "LOCK";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        lang: lang {
            compatible = "zmk,behavior-macro";
            label = "LANG";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
    };

    behaviors {
        shift_lang: shift_lang {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_LANG";
            bindings = <&kp>, <&lang>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <43>;
            tapping-term-ms = <200>;
        };

        prtscr_lock: prtscr_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "PRTSCR_LOCK";
            #binding-cells = <0>;
            bindings = <&kp PRINTSCREEN>, <&Lock>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LWR RSE>;
            then-layer = <ADJ>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspase {
            bindings = <&kp BACKSPACE>;
            key-positions = <6 5>;
        };

        return {
            bindings = <&kp RET>;
            key-positions = <19 18>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <4 5>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <3 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "MAIN";

            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&prtscr_lock  &kp LCTRL       &kp Q  &kp W  &kp E    &kp R    &kp T      &kp Y        &kp U            &kp I                &kp O    &kp P     &kp LBKT       &mt RWIN RBKT
              &kp LEFT_ALT    &kp A  &kp S  &kp D    &kp F    &kp G      &kp H        &kp J            &kp K                &kp L    &kp SEMI  &kp SQT
              &kp LEFT_SHIFT  &kp Z  &kp X  &kp C    &kp V    &kp B      &kp N        &kp M            &kp COMMA            &kp DOT  &kp FSLH  &mt RALT BSLH
                                            &lt 1 Y  &lt 2 H  &lt 3 N    &lt 2 ENTER  &lt 1 BACKSPACE  &shift_lang RSHFT 0
            >;
        };

        lower_layer {
            label = "SYM";

            // -----------------------------------------------------------------------------------------
            // |     |  _  |  F1 |  F2 |  F3 |  F4 |  F5 |   |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |
            //       |  +  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  -  |
            //       |  =  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |     |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LCTRL  &kp F1    &kp N9  &kp N8     &kp N7  &kp F5       &kp HOME  &kp UP           &kp PG_UP      &kp F9    &kp F10   &kp F11          &mt RGUI F12
        &kp LALT   &kp EXCL  &kp N6  &kp N5     &kp N4  &kp PRCNT    &kp LEFT  &kp DOWN         &kp RIGHT      &kp LPAR  &kp RPAR  &mt RCTRL MINUS
        &kp LSHFT  &kp N1    &kp N3  &kp N2     &kp N1  &kp N0       &kp END   &kp PRINTSCREEN  &kp PAGE_DOWN  &kp N9    &kp N0    &trans
                                     &lt 3 TAB  &trans  &trans       &trans    &trans           &lt 3 DEL
            >;
        };

        raise_layer {
            label = "NUM";

            // -----------------------------------------------------------------------------------------
            // |     | NMLK |  /  |  7  |  8  |  9  |  -  |   | VOLU| HOME| PRSC| PGUP| SCLK| CLCK|     |
            //       | CTRL |  *  |  4  |  5  |  6  |  +  |   | MUT | LEFT|  UP | RGHT| INS | APP |
            //       |      |  0  |  1  |  2  |  3  |  .  |   | VOLD| END | DOWN| PGDN| PAUS|     |
            //                          |     |     | ADJ |   | ADJ |     |     |

            bindings = <
&trans  &kp KP_NUM  &kp KP_SLASH  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS    &kp EQUAL     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp GRAVE  &kp CAPS         &trans
        &kp F1      &kp F2        &kp F3     &kp F4     &kp F5     &kp F6          &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS  &mt RCTRL K_APP
        &kp F7      &kp F8        &kp F9     &kp F10    &kp F11    &kp F12         &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BSLH   &trans
                                             &trans     &trans     &lt 3 RET       &lt 3 ESC     &trans        &trans
            >;
        };

        adjust_layer {
            label = "ADJ";

            // -----------------------------------------------------------------------------------------
            // | RST | BLDR |     |     |     |     |     |   |     |     |     |     |     | BLDR | RST |
            //       | BTCLR| BT0 | BT1 | BT2 | BT3 | BT4 |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //       |      |     |     |     |     |     |   |     |     |     |     |     |      |
            //                          |     |     |     |   |     |     |     |

            bindings = <
&bt BT_CLR  &bootloader   &sys_reset    &none              &none         &none         &none           &none         &none         &none         &none              &sys_reset    &bootloader   &bt BT_CLR
            &none         &bt BT_SEL 0  &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1       &bt BT_SEL 0  &none
            &out OUT_TOG  &none         &ext_power EP_TOG  &none         &none         &none           &none         &none         &none         &ext_power EP_TOG  &none         &out OUT_TOG
                                                           &trans        &none         &trans          &trans        &none         &trans
            >;
        };
    };
};
