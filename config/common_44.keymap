/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    macros {
        Lock: Lock {
            compatible = "zmk,behavior-macro";
            label = "LOCK";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        lang: lang {
            compatible = "zmk,behavior-macro";
            label = "LANG";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
    };

    behaviors {
        shift_lang: shift_lang {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_LANG";
            bindings = <&kp>, <&lang>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <43>;
            tapping-term-ms = <200>;
        };

        prtscr_lock: prtscr_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "PRTSCR_LOCK";
            #binding-cells = <0>;
            bindings = <&kp PRINTSCREEN>, <&Lock>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 1>;
            then-layer = <1>;
        };
    };

    combos {
        compatible = "zmk,combos";

        backspase {
            bindings = <&kp BACKSPACE>;
            key-positions = <6 5>;
        };

        return {
            bindings = <&kp RET>;
            key-positions = <19 18>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <4 5>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <3 4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "MAIN";

            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&kp ESCAPE  &kp LCTRL       &kp Q  &kp W  &kp E    &kp R    &kp T      &kp Y        &kp U            &kp I                &kp O    &kp P     &kp LBKT       &mt RWIN RBKT
            &kp LEFT_ALT    &kp A  &kp S  &kp D    &kp F    &kp G      &kp H        &kp J            &kp K                &kp L    &kp SEMI  &kp SQT
            &kp LEFT_SHIFT  &kp Z  &kp X  &kp C    &kp V    &kp B      &kp N        &kp M            &kp COMMA            &kp DOT  &kp FSLH  &mt RALT BSLH
                                          &lt 3 Y  &lt 2 H  &lt 1 N    &lt 0 ENTER  &lt 0 BACKSPACE  &shift_lang RSHFT 0
            >;
        };

        NUM {
            bindings = <
&kp ESC  &kp LCTRL  &kp FSLH  &kp N9  &kp N8  &kp N7  &kp EQUAL    &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &kp LALT   &kp LBKT  &kp N7  &kp N6  &kp N5  &kp MINUS    &trans  &trans  &trans  &trans  &trans  &trans
         &kp LSHFT  &kp RBKT  &kp N3  &kp N2  &kp N1  &kp N0       &trans  &trans  &trans  &trans  &trans  &trans
                                      &trans  &trans  &trans       &trans  &trans  &trans
            >;
        };

        NAV {
            bindings = <
&trans  &kp LCTRL  &trans  &trans    &kp UP_ARROW  &kp END    &kp PG_UP    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &kp LALT   &trans  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PG_DN    &trans  &trans  &trans  &trans  &trans  &trans
        &kp LSHFT  &trans  &trans    &trans        &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans        &trans     &trans       &trans  &trans  &trans
            >;
        };

        FUN {
            bindings = <
&kp ESC  &kp F1     &kp F2    &kp F3     &kp F4   &kp F5   &kp F6     &trans  &trans  &trans  &trans  &trans  &trans  &trans
         &kp F7     &kp F8    &kp F9     &kp F10  &kp F11  &kp F12    &trans  &trans  &trans  &trans  &trans  &trans
         &kp LCTRL  &kp LALT  &kp LSHFT  &trans   &trans   &trans     &trans  &trans  &trans  &trans  &trans  &trans
                                         &trans   &trans   &trans     &trans  &trans  &trans
            >;
        };
    };
};
