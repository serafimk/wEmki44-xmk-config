/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <250>; };

&mt { quick-tap-ms = <150>; };

/ {
    macros {
        Lock: Lock {
            compatible = "zmk,behavior-macro";
            label = "LOCK";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp L>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };

        lang: lang {
            compatible = "zmk,behavior-macro";
            label = "LANG";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
    };

    behaviors {
        shift_lang: shift_lang {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_LANG";
            bindings = <&kp>, <&lang>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <43>;
            tapping-term-ms = <200>;
        };

        prtscr_lock: prtscr_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "PRTSCR_LOCK";
            #binding-cells = <0>;
            bindings = <&kp PRINTSCREEN>, <&Lock>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        backspase {
            bindings = <&kp BACKSPACE>;
            key-positions = <6 5>;
        };

        return {
            bindings = <&kp RET>;
            key-positions = <19 18>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <4 5>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <3 4>;
        };

        ble {
            bindings = <&bt BT_NXT>;
            key-positions = <6 19>;
        };

        rst {
            bindings = <&bootloader>;
            key-positions = <2 27 29>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 3>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };

        lb {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <5 19>;
            layers = <0>;
        };

        rb {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <18 31>;
            layers = <0>;
        };

        back_slash {
            bindings = <&kp NON_US_BACKSLASH>;
            key-positions = <4 18>;
            layers = <0>;
        };

        sqt {
            bindings = <&kp SQT>;
            key-positions = <17 30>;
            layers = <0>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <3 17>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "MAIN";

            // -----------------------------------------------------------------------------------------
            // |  GUI |   ~  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  |  [   | GUI/] |
            //        | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |CTRL/'|
            //        | LALT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT |
            //                           | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
&trans  &trans  &mt Y Q  &mt U W  &mt I E      &mt O R     &mt P T            &kp Y        &kp U            &kp I                &kp O    &kp P     &kp LBKT       &mt RWIN RBKT
        &trans  &mt H A  &mt J S  &mt K D      &mt L F     &mt SEMICOLON G    &kp H        &kp J            &kp K                &kp L    &kp SEMI  &kp SQT
        &trans  &mt N Z  &mt M X  &mt COMMA C  &mt DOT V   &mt SLASH B        &kp N        &kp M            &kp COMMA            &kp DOT  &kp FSLH  &mt RALT BSLH
                                  &lt 3 LCTRL  &lt 2 LALT  &lt 1 LSHFT        &lt 0 ENTER  &lt 0 BACKSPACE  &shift_lang RSHFT 0
            >;
        };

        namber_layer {
            bindings = <
&trans  &trans  &kp LCTRL  &kp N9  &kp N8  &kp N7  &kp EQUAL    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &kp LALT   &kp N7  &kp N6  &kp N5  &kp MINUS    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &kp LSHFT  &kp N3  &kp N2  &kp N1  &kp N0       &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans  &trans  &trans       &trans  &trans  &trans
            >;

            label = "NUM";
        };

        navigation_layer {
            bindings = <
&trans  &trans  &kp LC(A)  &kp HOME  &kp UP_ARROW  &kp END    &kp PG_UP    &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &kp LC(C)  &kp LEFT  &kp DOWN      &kp RIGHT  &kp PG_DN    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &kp LC(V)  &trans    &trans        &trans     &trans       &trans  &trans  &trans  &trans  &trans  &trans
                                     &trans        &trans     &trans       &trans  &trans  &trans
            >;

            label = "NAV";
        };

        f_layer {
            bindings = <
&trans  &trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &kp F11  &kp F12  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans
                                  &trans  &trans  &trans     &trans  &trans  &trans
            >;

            label = "FAN";
        };
    };
};
